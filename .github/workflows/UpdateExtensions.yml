# This is a basic workflow to help you get started with Actions


name: Update Extensions
on:

 # push:
  #  branches:
   #   - main
    #paths-ignore:
     # - '.gitignore'
      #- '.github/workflows/**'

# Controls when the workflow will run
#on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
        inputs: 
          extensionfilename:
            description: 'extensionfilename'     
            required: true
            default: ''

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  # This workflow contains a single job called "build"

 
          
  updateExtensionTEST:
      # The type of runner that the job will run on
    runs-on: [self-hosted, linux, X64]
    environment: 
        name: TEST
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        #with:
        #  fetch-depth: 0
        #  path: INT-001

      - name: Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v37.5.2
        #with:
        #  path: INT-001
        
      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run:  cat ${{ github.workspace }}/README.md

      # Runs a set of commands using the runners shell
      - name: TEST Update Extension
        run: |
            echo "name: ${{ inputs.extensionfilename}}" 
            envName="TEST"
            echo "NS .. $NSUsername"
            echo "NSusername is... ${{ vars.EXTENSIONSNSUSER }}"
            fm = "EXTENSIONSNSUSER"
            echo ${{ vars[format('EXTENSION{0}', 'TEST')] }}
            export extensionJson="$(<${{ inputs.extensionfilename}})"
            echo "file contents are .. $extensionJson"
            export WD=~/boomi-cicd-github-action/boomicicd-cli/cli/scripts
            export WORKSPACE=~/boomi-cicd-github-action/boomicicd-cli/cli/scripts
            chmod +x ~/boomi-cicd-github-action/boomicicd-cli/cli/scripts/bin/common.sh
            ~/boomi-cicd-github-action/boomicicd-cli/cli/scripts/bin/common.sh
            chmod +x ~/boomi-cicd-github-action/boomicicd-cli/cli/scripts/updateExt.sh
            ~/boomi-cicd-github-action/boomicicd-cli/cli/scripts/updateExt.sh env=$envName 

        env:
           NSUsername: ${{ vars.EXTENSIONSNSUSER }}
 
